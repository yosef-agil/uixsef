export {};
declare type Data = {
    [key: string]: string | number | boolean | undefined | null;
};
export declare type SplitbeeOptions = {
    disableCookie?: boolean;
    token?: string;
    apiUrl?: string;
    scriptUrl?: string;
};
export declare type Splitbee = {
    track: (event: string, data?: Data) => Promise<void>;
    user: {
        set: (data: Data) => Promise<void>;
    };
    init: (config?: SplitbeeOptions) => void;
    enableCookie: (forceNewSession?: boolean) => void;
    reset: () => void;
};
declare global {
    interface Window {
        splitbee: Splitbee;
    }
}
export declare type QueueData = {
    type: 'user' | 'track' | 'enableCookie' | 'reset';
    payload: any;
};
